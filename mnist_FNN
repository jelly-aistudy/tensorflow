import tensorflow as tf
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.models import Sequential
from tensorflow.keras.callbacks import ModelCheckpoint

mnist = tf.keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()
    
x_train = x_train / 255.0
x_test = x_test / 255.0

model = Sequential([
                    Flatten(input_shape=(28,28)),
                    Dense(1024, activation='relu'),
                    Dense(512, activation='relu'),
                    Dense(128, activation='relu'),
                    Dense(10, activation='softmax')
])

model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['acc'])

ckpath = 'jelly.ckpt'
checkpoint = ModelCheckpoint(filepath=ckpath,
                             save_weights_only=True,
                             save_best_only=True,
                             monitor='val_loss',
                             verbose=1)
    
model.fit(x_train, y_train,
          validation_data=(x_test, y_test),
          epochs=20,
          callbacks=[checkpoint])
    
model.load_weights(ckpath)
